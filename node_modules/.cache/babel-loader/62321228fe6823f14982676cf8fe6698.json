{"ast":null,"code":"var _jsxFileName = \"/home/minjikim/min_workspace/study_graphQL/src/Home.tsx\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport { HOME_PAGE } from \"./queries\";\nimport { addAllMovie } from \"./stores/movies\"; //stateless component\n//컴포넌트안에 함수를 넣음.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const addMovie = movie => {\n    addAllMovie(movie);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: HOME_PAGE,\n    children: _ref => {\n      let {\n        loading,\n        data,\n        error\n      } = _ref;\n\n      if (data) {\n        // console.log(data);\n        addMovie(data.movies);\n        return data.movies.map(movie => /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"black\"\n          },\n          to: `/details/${movie.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.medium_cover_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [movie.title, \"/ \", movie.rating]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this));\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 23\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/minjikim/min_workspace/study_graphQL/src/Home.tsx"],"names":["React","Query","Link","HOME_PAGE","addAllMovie","Home","addMovie","movie","loading","data","error","movies","map","textDecoration","color","id","medium_cover_image","title","rating"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA6BC,KAA7B,QAAuD,cAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,WAAT,QAAmC,iBAAnC,C,CAEA;AACA;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAIC,KAAD,IAAoB;AACnCH,IAAAA,WAAW,CAACG,KAAD,CAAX;AACD,GAFD;;AAGA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,SAAd;AAAA,cACG,QAAoE;AAAA,UAAnE;AAAEK,QAAAA,OAAF;AAAWC,QAAAA,IAAX;AAAiBC,QAAAA;AAAjB,OAAmE;;AACnE,UAAID,IAAJ,EAAU;AACR;AACAH,QAAAA,QAAQ,CAACG,IAAI,CAACE,MAAN,CAAR;AACA,eAAOF,IAAI,CAACE,MAAL,CAAYC,GAAZ,CAAiBL,KAAD,iBACrB,QAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAEM,YAAAA,cAAc,EAAE,MAAlB;AAA0BC,YAAAA,KAAK,EAAE;AAAjC,WADT;AAEE,UAAA,EAAE,EAAG,YAAWP,KAAK,CAACQ,EAAG,EAF3B;AAAA,kCAIE;AAAK,YAAA,GAAG,EAAER,KAAK,CAACS;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,uBACGT,KAAK,CAACU,KADT,QACkBV,KAAK,CAACW,MADxB;AAAA,aAASX,KAAK,CAACQ,EAAf;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADK,CAAP;AAWD,OAdD,MAcO,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACR;AAjBH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAzBD;;KAAMV,I;AA2BN,eAAeA,IAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { OperationVariables, Query, QueryResult } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport { HOME_PAGE } from \"./queries\";\nimport { addAllMovie, Movie } from \"./stores/movies\";\n\n//stateless component\n//컴포넌트안에 함수를 넣음.\nconst Home = () => {\n  const addMovie = (movie: Movie[]) => {\n    addAllMovie(movie);\n  };\n  return (\n    <Query query={HOME_PAGE}>\n      {({ loading, data, error }: QueryResult<any, OperationVariables>) => {\n        if (data) {\n          // console.log(data);\n          addMovie(data.movies as Movie[]);\n          return data.movies.map((movie: Movie) => (\n            <Link\n              style={{ textDecoration: \"none\", color: \"black\" }}\n              to={`/details/${movie.id}`}\n            >\n              <img src={movie.medium_cover_image} />\n              <h2 key={movie.id}>\n                {movie.title}/ {movie.rating}\n              </h2>\n            </Link>\n          ));\n        } else return <div>loading</div>;\n      }}\n    </Query>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}